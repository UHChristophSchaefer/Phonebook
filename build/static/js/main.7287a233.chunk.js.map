{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","nameFilter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","name","number","deletePerson","onClick","Persons","persons","map","p","i","id","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","status","App","useState","setPersons","setNewName","setNewNumber","setNameFilter","setMessage","messageType","setMessageType","useEffect","personsService","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","window","alert","length","confirm","person","find","changedPerson","returnedPerson","setTimeout","catch","error","personObject","createdPerson","concat","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7287a233.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ nameFilter,  handleFilterChange }) => {\r\n    return (\r\n        <div>\r\n            filter shown with: <input\r\n                value={nameFilter}\r\n                onChange={handleFilterChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","\r\n\r\nimport React from 'react'\r\n\r\nconst PersonForm  = (props) => {\r\n    return (\r\n      <form onSubmit={props.addPerson}>\r\n        <div>\r\n          name: <input\r\n              value={props.newName}\r\n              onChange={props.handleNameChange}\r\n            />\r\n        </div>\r\n        <div>\r\n          number: <input \r\n              value={props.newNumber}\r\n              onChange={props.handleNumberChange}/>\r\n        </div>\r\n        <div>          \r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  export default PersonForm","import React from 'react'\r\n\r\nconst Person  = ({ name, number, deletePerson }) => {\r\n    return (\r\n        <div>\r\n            {name} {number}\r\n            <button onClick={deletePerson}>delete</button>\r\n        </div>        \r\n    )\r\n}\r\n\r\nconst Persons  = ({ persons, deletePerson }) => {\r\n    return (\r\n        <div>\r\n            {persons.map((p, i) => \r\n                <Person\r\n                    key={i}\r\n                    name={p.name} \r\n                    number={p.number} \r\n                    deletePerson={() => deletePerson(p.id)}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  if(type === \"info\"){\r\n    return (\r\n      <div className=\"info\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.status)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport Filter from './components/Filter.js'\nimport PersonForm from './components/PersonForm.js'\nimport Persons from './components/Persons.js'\nimport Notification from './components/Notification'\n\nimport personsService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n\n  const [message, setMessage] = useState(null)\n  const [messageType, setMessageType] = useState(null)\n\n  // get persons from server\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const personsToShow = nameFilter === ''\n    ? persons\n    : persons.filter(p => p.name.toLowerCase().includes(nameFilter.toLowerCase()))\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    // filter list with the current entered name\n    if(newName === ''){\n       // no name entered\n       window.alert(`No name entered.`);\n    } \n    else if(persons.filter(p => p.name === newName).length > 0){\n      // name already exist\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n          // user clicked 'ok' => user wants to replace the number\n          const person = persons.find(p => p.name === newName)\n          const changedPerson = { ...person, number: newNumber }\n          \n          personsService\n            .update(changedPerson.id, changedPerson)\n            .then(returnedPerson => {         \n              // edit the list of persons with the updated user \n              setPersons(persons.map(p => p.id !== returnedPerson.id ? p : returnedPerson))\n              setMessageType('error')\n              setMessage(\n                `Number of ${changedPerson.name} successfully updated`\n              )\n              setTimeout(() => {\n                setMessageType(null)\n                setMessage(null)\n              }, 5000)\n\n              // reset the inputs\n              setNewName('')\n              setNewNumber('')\n            })\n            .catch(error => {            \n              setMessageType('error')\n              setMessage(\n                `Information of ${person.name}' has already been removed from server`\n              )\n              setTimeout(() => {\n                setMessageType(null)\n                setMessage(null)\n              }, 5000)\n              setPersons(persons.filter(p => p.id !== person.id))\n            })\n\n      }      \n    }\n    else if(newNumber === ''){\n      // no phone number entered\n      window.alert(`No phone number entered.`);\n    }\n    else {\n      // name does not exist, so add it to the list\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      \n      personsService\n        .create(personObject)\n        .then(createdPerson  => {\n          setMessageType('info')\n          setMessage(\n            `${personObject.name} successfully added to Phonebook.`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n\n          setPersons(persons.concat(createdPerson))     \n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          // this is the way to access the error message\n          setMessageType('error')\n          setMessage(error.response.data.error)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }      \n  }\n\n  const handleNameChange = (event) => {\n    // console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    // console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  \n  const handleFilterChange = (event) => {\n    // console.log(event.target.value)\n    setNameFilter(event.target.value)\n  }\n\n  const deletePerson = id => {\n    const person = persons.find(p => p.id === id)\n\n    if(window.confirm(`Delete ${person.name} ?`)){\n  \n      personsService\n        .deletePerson(id)\n        .then(err => {\n          setMessageType('info')            \n          // delete person also from local list\n          setPersons(persons.filter(p => p.id !== id))         \n          \n          setMessage(\n            `${person.name} successfully deleted from Phonebook.`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          alert(\n            `Failed to delete person '${person.name}' from server`\n          )\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType}/>\n\n      <Filter nameFilter={nameFilter} handleFilterChange={handleFilterChange}/>\n\n      <h3>Add a new</h3>\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n      <Persons \n        persons={personsToShow} \n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}